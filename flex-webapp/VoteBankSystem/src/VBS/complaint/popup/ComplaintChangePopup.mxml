<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" title="Status Change" close="PopUpManager.removePopUp(this);" xmlns:utils="VBS.utils.*">
	<fx:Script source="/../../../VBS/utils/vbscommon.as"/>
	<fx:Declarations>
		<mx:DateFormatter id="dateformat" formatString="DD-MMM-YYYY HH:NN:SS A"/>	
	
	</fx:Declarations>
	<fx:Metadata>
		[Event("closeEvent")]
		
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import VBS.domain.VbmsComplaintDTO;
			
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.events.ValidationResultEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			import spark.events.IndexChangeEvent;
			[Bindable]public var complaintDTO:VbmsComplaintDTO;
			private function saveorUpdateComplaintResult(event:ResultEvent):void{
				Alert.show("Successfully Updated Complaint");
			}

			protected function statusid_changeHandler(event:ListEvent):void
			{
				complaintDTO.status=statusid.selectedItem.data;
			}


			protected function button1_clickHandler(event:MouseEvent):void
			{	
				var validatorErrorArray:Array=Validator.validateAll(new Array(strvalidator,strvalidator1));
				
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				if (isValidForm) {
					var dateObj:Date=new Date();
					var complaintAC:ArrayCollection=new ArrayCollection;
					complaintDTO.updated_dttm=dateformat.format(dateObj);
					complaintAC.addItem(complaintDTO);
					empRO.saveorUpdateComlaints(complaintAC);
					dispatchEvent(new Event("closeEvent"));	 
					PopUpManager.removePopUp(this);
				} else {
					var err:ValidationResultEvent;
					var errorMessageArray:Array = [];
					for each (err in validatorErrorArray) {
						var errField:String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": " + err.message);
					}
					 
				}
				
				
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:StringValidator id="strvalidator"  property="text" source="{closedbyid}" required="true" requiredFieldError="This Field is Mandatory"/>
		<mx:StringValidator id="strvalidator1"  property="text" source="{commentsid}" required="true" requiredFieldError="This Field is Mandatory"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:RemoteObject id="empRO" showBusyCursor="true"   destination="rpcBean">
			<s:method name="saveorUpdateComlaints"        result="saveorUpdateComplaintResult(event)" fault="faultHandler(event);"/>
		</s:RemoteObject>
	</fx:Declarations>
	<mx:Form x="10" y="1" width="100%" height="100%">
		<mx:FormHeading label="Complaint Status Change"/>
		<mx:FormItem label="Complaint ID">
			<s:TextInput editable="false" text="{complaintDTO.complaintid}"/>
		</mx:FormItem>
		<mx:FormItem label="Comments" required="true" >
			<s:TextArea id="commentsid" text="@{complaintDTO.comments}"/>
		</mx:FormItem>
		<mx:FormItem label="Status">
			<utils:PreSelectComboBox  width="100%" selectedValue="{complaintDTO.status}"    id="statusid" change="statusid_changeHandler(event)" dataProvider="{complaintstatusAC}" prompt="Select" selectedIndex="-1"/>
			
		</mx:FormItem>
		<mx:FormItem label="Closed By " required="true">
			<s:TextInput id="closedbyid" x="67" y="-5"/>
		</mx:FormItem>
		<mx:FormItem label="Label" >
			<s:Button label="Update Status" click="button1_clickHandler(event)"/>
		</mx:FormItem>
	</mx:Form>
</s:TitleWindow>
